name: CI/CD pipeline

on:
  workflow_dispatch: # Only runs manually if you trigger it

jobs:
  # Build stage: prepare Python and install dependencies
  build:
    runs-on: ubuntu-latest
    outputs:
      python-version: "3.13"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        id: set-python
        with:
          python-version: "3.13"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  # Test stage: run unit/integration tests
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests (verbose)
        run: pytest tests/ -v

  # Coverage stage: run coverage and upload HTML report
  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with coverage and generate HTML report
        run: pytest tests/ --cov=src --cov-report=html

      - name: Upload coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov

  # Code quality (lint) stage
  lint:
    runs-on: ubuntu-latest
    needs: coverage
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install pylint
        run: |
          python -m pip install --upgrade pip
          pip install pylint

      - name: Run pylint and save report
        run: |
          pylint src/ --output-format=text > lint_report.txt || true

      - name: Upload lint report
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: lint_report.txt

  # Formatting stage
  format:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install black
        run: |
          python -m pip install --upgrade pip
          pip install black

      - name: Check formatting with black (check)
        run: black src/ tests/ --check

      - name: Show black diff
        # show what would change (doesn't modify repo)
        run: black src/ tests/ --diff || true

  # Security stage: run bandit and upload JSON report
  security:
    runs-on: ubuntu-latest
    needs: format
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install bandit
        run: |
          python -m pip install --upgrade pip
          pip install bandit

      - name: Run bandit (console)
        run: bandit -r src/ -v || true

      - name: Run bandit (json output)
        run: bandit -r src/ -f json -o security_report.json || true

      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security_report.json
